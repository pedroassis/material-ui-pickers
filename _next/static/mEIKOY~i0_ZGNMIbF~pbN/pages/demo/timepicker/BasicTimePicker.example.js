(window.webpackJsonp=window.webpackJsonp||[]).push([["c14f"],{Vr2u:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return l}),t.d(n,"raw",function(){return o}),t.d(n,"relativePath",function(){return c});var a=t("hDBU"),r=t("mXGw"),u=t("kebl"),i=t("Ckcz");function l(){var e=r.useState(new Date),n=Object(a.default)(e,2),t=n[0],l=n[1];return r.createElement(r.Fragment,null,r.createElement(i.d,{renderInput:function(e){return r.createElement(u.a,e)},label:"12 hours",value:t,onChange:function(e){return l(e)}}),r.createElement(i.d,{renderInput:function(e){return r.createElement(u.a,e)},ampm:!1,label:"24 hours",value:t,onChange:function(e){return l(e)}}))}var o='import * as React from "react";\nimport TextField from "@material-ui/core/TextField";\nimport { TimePicker } from "@material-ui/pickers";\n\nexport default function BasicTimePicker() {\n  const [value, setValue] = React.useState<Date | null>(new Date());\n\n  return (\n    <React.Fragment>\n      <TimePicker\n        renderInput={(props) => <TextField {...props} />}\n        label="12 hours"\n        value={value}\n        onChange={(newValue) => setValue(newValue)}\n      />\n      <TimePicker\n        renderInput={(props) => <TextField {...props} />}\n        ampm={false} // This is not needed if you are using localization\n        label="24 hours"\n        value={value}\n        onChange={(newValue) => setValue(newValue)}\n      />\n    </React.Fragment>\n  );\n}\n',c="pages/demo/timepicker/BasicTimePicker.example.tsx"},otJK:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/demo/timepicker/BasicTimePicker.example",function(){var e=t("Vr2u");return{page:e.default||e}}])}},[["otJK","5d41","9da1","85a6"]]]);